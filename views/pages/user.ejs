<html lang="pt-br">
  <head>
    <!-- Meta tags Obrigatórias -->
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />

    <!-- Bootstrap CSS -->
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css"
      integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO"
      crossorigin="anonymous"
    />
    <link rel="stylesheet" href="styles/user.css" />
    <link
      rel="stylesheet"
      crossorigin
      href="https://dds.dell.com/components/2.35.1/css/dds-reboot.min.css"
    />
    <link
      rel="stylesheet"
      crossorigin
      href="https://dds.dell.com/components/2.35.1/css/dds-fonts.min.css"
    />
    <link
      rel="stylesheet"
      crossorigin
      href="https://dds.dell.com/components/2.35.1/css/dds-icons.min.css"
    />
    <link
      rel="stylesheet"
      crossorigin
      href="https://dds.dell.com/components/2.35.1/css/dds-helpers.min.css"
    />
    <link
      rel="stylesheet"
      crossorigin
      href="https://dds.dell.com/components/2.35.1/css/dds-main.min.css"
    />

    <title>DIVE</title>
    <script>
      function pesquisar(evento) {
        const busca = evento.target.value.toLowerCase(); // Converte a busca para minúsculas
        const lista = document.querySelector("#list").children;

        Array.from(lista).forEach((item) => {
          const texto = item.textContent.toLowerCase(); // Converte o texto do item para minúsculas
          if (texto.includes(busca)) {
            item.style.display = ""; // Mostra o item
          } else {
            item.style.display = "none"; // Esconde o item
          }
        });
      }
    </script>

    <style>
      .dds_tabs_tab:hover {
        background-color: #e1e1e1; /* Altere a cor desejada */
        color: #00468b; /* Altere a cor do texto */
      }

      .manual:hover {
        background-color: #e1e1e1; /* Altere a cor desejada */
        color: #00468b; /* Altere a cor do texto */
      }

      .manual {
        cursor: pointer;
      }

      .sino {
        cursor: pointer;
      }

      .div.dds_select_wrapper {
        cursor: pointer;
      }
    </style>
  </head>
  <body  style="background-color: #F5F6F7">
    <!--Adição do componente "Header"-->
    
    <%- include ('../componentes/header.ejs'); %>
    <%- include ('../componentes/abaUser.ejs'); %>
    <div class="gerenciador">
      <!--Espaço de filtragem-->
      <div class="filter">
        <h3 style="font-size: 20px; margin-bottom: 16px; font-weight: 400;">Tipo do Produto</h3>
        <label style="font-size: 16px; padding:4px 12px;"
          ><input
            type="checkbox"
            value="servidor"
            onchange="updateFilters(this)"
          />
          Servidor</label
        >
        <label style="font-size: 16px; padding: 4px 12px;"
          ><input
            type="checkbox"
            value="notebook"
            onchange="updateFilters(this)"
          />
          Notebook</label
        >
        <label style="font-size: 16px;  padding:4px 12px;"
          ><input
            type="checkbox"
            value="desktop"
            onchange="updateFilters(this)"
          />
          Desktop</label
        >
      </div>

      
        <!--Seção visível apenas para telas maiores-->
        <div class="manuals">
        <!--Adição barra de pesquisa-->
        <div class="search">
          <div
            style="width: 66%"
            class="dds__search"
            id="search-462688741"
            data-dds="search"
            role="search"
          >
            <div class="dds__search__wrapper">
              <input
                type="search"
                class="dds__search__control"
                name="search-control-411542040"
                id="search-control-411542040"
                autocomplete="off"
                placeholder="Buscar"
                aria-labelledby="search-label-411542040"
                aria-labelledby="search-label-411542040"
                oninput="pesquisar(event)" <!-- Usa oninput para busca dinâmica -->
            </div>
          </div>

          <div
            style="width: 32%"
            class="dds__select"
            data-dds="select"
            id="select-730995141"
          >
            <div class="dds__select__wrapper">
              <select
                style="background-color: white"
                id="select-control-777389777"
                aria-label="Select label"
                class="dds__select__field"
                aria-describedby="select-helper-777389777"
              >
                <option
                  value=""
                  class="dds__select__option--placeholder"
                  selected="true"
                >
                  Ordenar
                </option>

                <option value="2">Ordem alfabética (A-Z) </option>
                <option value="1">Ordem alfabética (Z-A)</option>
                <option value="4">Mais Recentes</option>
                <option value="3">Mais Antigos</option>

              </select>
              <div id="select-error-777389777" class="dds__invalid-feedback">
                Error text
              </div>
            </div>
          </div>
        </div>

        <!-- Listagem de manuais -->
        <div id="list">
          <!--nessa div os manuais são adicionados de acordo com o banco de dados-->
        </div>
        <div id='botaoCarregar' style="height: 20%;"></div>
      </div>

    </div>

    <!-- POP-UP DE VISUALIZAÇÃO DE MANUAIS-->
    <div id="janela-editar">
      <div class="popup">
        <img src="images/X.svg" alt="fechar" class="close" id="xs" />
        <div id="addExterno">
          <div id="infosAdd">
            <h2 id="nomeDoManual">
              <!-- Aqui será adicionado o nome do manual específico a partir do banco de dados -->
            </h2>
            <div class="ajusteLabel">
              <img
                src="images/calendar.svg"
                alt="Calendário"
                id="calendarioPubli"
              />
              <label for="Data de Publicação" id="dataDePublicacao"
                >Data a ser colocada</label
              >
            </div>
          </div>
          <div id="brancoEditar">
            <div class="conteudoEditar">
              <div id="descricaoEditar" class="itemEditar">
                <div class="ajusteLabel">
                  <img
                    src="images/Prancheta.svg"
                    alt="Descrição"
                    id="prancheta"
                  />
                  <label
                    style="padding: 8px; font-weight: 500; font-size: 20px"
                    for="Descrição"
                  >
                    Descrição</label
                  >
                </div>
                <!--Input de descrição do manual-->
                <div id="textArea"></div>
                <div
                  class="ajusteLabel"
                  style="display: flex; align-items: center"
                >
                  <img
                    src="images/Prancheta.svg"
                    alt="Descrição"
                    id="prancheta"
                  />
                  <label
                    style="padding: 8px; font-weight: 500; font-size: 20px"
                    for="Descrição"
                    >Conteúdos</label
                  >
                </div>
                <div class="ajusteLabel">
                  <div id="files"></div>
                </div>
              </div>
            </div>
          </div>
          <div id="divClose"></div>
        </div>
      </div>
    </div>

    <!-- JavaScript (Opcional) -->
    <!-- jQuery primeiro, depois Popper.js, depois Bootstrap JS -->
    <script
      src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
      integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"
      integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js"
      integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy"
      crossorigin="anonymous"
    ></script>
    <script src="https://dds.dell.com/components/2.35.1/js/index.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <script>
     
      const element5 = document.getElementById("select-730995141");
      DDS.Select(element5);
      const element6 = document.getElementById("tabs-381787046");
      DDS.Tabs(element6);
      const modalEditar = document.getElementById("janela-editar");
      const userId = localStorage.getItem("userId");

      // Função para carregar a lista de manuais
      function carregarListaManuais() {
        document.getElementById("list").innerHTML = "";
        axios
          .get("/handbook")
          .then(function (response) {
            renderizarManuais(response.data);
          })
          .catch(function (error) {
            console.error("Erro ao carregar lista de manuais:", error);
          });
      }

      function carregarManuaisDesignados() {
        document.getElementById("list").innerHTML = "";
        axios
          .get(`/users/${userId}/UndoneTasks`)
          .then(function (response) {
            renderizarManuais(response.data, true);
          })
          .catch(function (error) {
            console.error(
              "Erro ao carregar lista de manuais designados:",
              error
            );
            document.querySelector('#list').innerHTML = `
            <p style='margin-top: 16px'>Você não possui nenhuma atividade pendente : )</p>
            `
          });
      }

      function carregarManuaisFeitos() {
        document.getElementById("list").innerHTML = "";
        axios
          .get(`/users/${userId}/DoneTasks`)
          .then(function (response) {
            renderizarManuais(response.data, false, true);
          })
          .catch(function (error) {
            console.error("Erro ao carregar lista de manuais feitos:", error);
          });
      }
      

      let order = 0;
      document
        .getElementById("select-control-777389777")
        .addEventListener("change", () => {
          order = document.getElementById("select-control-777389777").value;
          console.log(order);
          if (
            document
              .querySelector("#tab-mobile-just-2")
              .getAttribute("aria-selected") === "true"
          ) {
            carregarListaManuais();
          } else if (
            document
              .querySelector("#tab-mobile-just-0")
              .getAttribute("aria-selected") === "true"
          ) {
            carregarManuaisDesignados();
          } else {
            carregarManuaisFeitos();
          }
        });

      let filters = [];
      function updateFilters(checkbox) {
        if (checkbox.checked) {
          filters.push(checkbox.value.toLowerCase());
        } else {
          filters = filters.filter(
            (filter) => filter !== checkbox.value.toLowerCase()
          );
        }
        if (
          document
            .querySelector("#tab-mobile-just-2")
            .getAttribute("aria-selected") === "true"
        ) {
          carregarListaManuais();
        } else if (
          document
            .querySelector("#tab-mobile-just-0")
            .getAttribute("aria-selected") === "true"
        ) {
          carregarManuaisDesignados();
        } else {
          carregarManuaisFeitos();
        }
      } // Recarrega a lista de manuais com os novos filtros


function renderizarManuais(
  manuais,
  showButton = false,
  showGrayButton = false
) {
  const listElement = document.getElementById("list");
  
  // Limpar a listagem apenas se estiver na primeira página

  if (filters.length > 0) {
    manuais = manuais.filter((a) => {
      return filters.some((filter) =>
        a.title.toLowerCase().includes(filter)
      );
    });
  }

  if (order === "2") {
    manuais = manuais.sort((a, b) => a.title.localeCompare(b.title));
  } else if (order === "1") {
    manuais = manuais.sort((a, b) => b.title.localeCompare(a.title));
  } else if (order === '3') {
    manuais = manuais.sort((a, b) => new Date(a.createdAt) - new Date(b.createdAt));
  } else if (order === '4') {
    manuais = manuais.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));
  }

  

  manuais.forEach(function (manual) {
    const manualElement = document.createElement("div");
    manualElement.id = manual.id;
    manualElement.className = "manual";

    let manualImage;
    if (manual.title.includes('Notebook')) {
      manualImage = "images/Notebook.svg";
    } else if (manual.title.includes('Servidor')) {
      manualImage = "images/Servidor.svg";
    } else if (manual.title.includes('Desktop')) {
      manualImage = "images/Desktop.svg";
    } else {
      manualImage = "";
    }

    manualElement.innerHTML = `
      <div class='icones'>
        <img src=${manualImage} alt="Icone desktop">
      </div>
      <div class="informações" style='width: 50%; padding: 24px 16px'>
        <h4 style='margin: 0px; line-height:24px; font-weight:600; color: var(--color-blue-600); font-size: 16px'>${manual.title}</h4>
      </div>
    `;

    manualElement.addEventListener("click", () => {
      nomeEdata(manual.id);
      pegarMateriais(manual.id);
      modalEditar.classList.add("abrir");
      document.body.style.overflow = "hidden";
      modalEditar.addEventListener("click", (e) => {
        if (
          e.target.id == "xs" ||
          e.target.id == "janela-editar" ||
          e.target.id == "conclusao"
        ) {
          modalEditar.classList.remove("abrir");
          document.body.style.overflow = "auto";
          document.getElementById("files").innerHTML = ``;
          if (
            document
              .querySelector("#tab-mobile-just-2")
              .getAttribute("aria-selected") === "true"
          ) {
            carregarListaManuais();
          } else if (
            document
              .querySelector("#tab-mobile-just-0")
              .getAttribute("aria-selected") === "true"
          ) {
            carregarManuaisDesignados();
          } else {
            carregarManuaisFeitos();
          }
        }
      });

      async function nomeEdata(data) {
        try {
          const response = await axios.get(`handbook/${data}`);
          const manual = response.data;
          document.getElementById(
            "nomeDoManual"
          ).textContent = `${manual.title}`;
          document.getElementById(
            "textArea"
          ).innerHTML = `<p id="description" style="text-align: justify; font-size:24px; font-weight: 100; padding:16px 0px; border-radius: 2px; background-color: white;" class="box">${manual.description}</p>`;

          if (showButton) {
            document.getElementById("divClose").innerHTML = `
              <button onclick='concluido(${data})' type="submit" id="concluir" class="concluir">
                Marcar como concluído
              </button>
            `;
          }
          if (showGrayButton) {
            document.getElementById("divClose").innerHTML = `
              <button onclick='concluido(${data})' type="submit" id="concluir" class="concluir" disabled style='background-color: #b6b6b6'>
                Concluído
              </button>
            `;
          }
        } catch (error) {
          console.error("Erro ao carregar o nome do manual:", error);
        }
      }

      function pegarMateriais(data) {
        axios.get(`/handbook/${data}/materials`)
            .then((response) => {
                const materials = response.data;
                materials.forEach((material) => {
                  const materialElement = document.getElementById("files");

                  if (material.type == 'Imagem' || material.type == 'PNG'){
                    materialElement.innerHTML += `
                      <div class="fileSquare">
                        <div class='divIconeMaterial'>
                            <img src="images/IMG.svg" alt="Icone imagem" class="iconeMaterial">
                        </div>
                        <div class="nomeArquivo">
                            <label class="nomeMaterial">${material.file}</label>
                        </div>
                      </div>
                    `;
                  } else if (material.type == 'Video' || material.type == 'MP4'){
                    materialElement.innerHTML += `
                      <div class="fileSquare">
                        <div class='divIconeMaterial'>
                            <img src="images/VIDEO.svg" alt="Icone vídeo" class="iconeMaterial">
                        </div>
                        <div class="nomeArquivo">
                            <label class="nomeMaterial">${material.file}</label>
                        </div>
                      </div>
                    `;
                  } else if (material.type == 'Documento' || material.type == 'PDF' || material.type == 'TXT'){
                    materialElement.innerHTML += `
                      <div class="fileSquare">
                        <div class='divIconeMaterial'>
                            <img src="images/PDF.svg" alt="Icone documento" class="iconeMaterial">
                        </div>
                        <div class="nomeArquivo">
                            <label class="nomeMaterial">${material.file}</label>
                        </div>
                      </div>
                    `;
                  } else if (material.type == '3D' || material.type == 'STL'){
                    materialElement.innerHTML += `
                      <div class="fileSquare">
                        <div class='divIconeMaterial'>
                            <img src="images/3D.svg" alt="Icone 3D" class="iconeMaterial">
                        </div>
                        <div class="nomeArquivo">
                            <label class="nomeMaterial">${material.file}</label>
                        </div>
                      </div>
                    `;
                  } else if (material.type == 'outro'){
                    materialElement.innerHTML += `
                      <div class="fileSquare">
                        <div class='divIconeMaterial'>
                            <img src="images/OTHER.svg" alt="Icone outros" class="iconeMaterial">
                        </div>
                        <div class="nomeArquivo">
                            <label class="nomeMaterial">${material.file}</label>
                        </div>
                      </div>
                    `;
                  } 
                })
                console.log("Materials:", materials);
            })
            .catch(function (error) {
                console.error("Erro ao carregar os arquivos do manual", error);
            });
      }
    });

    listElement.appendChild(manualElement);
  });

  
  }


      async function concluido(manualId) {
        await axios
          .get(`/handbook/read/${manualId}/${userId}`)
          .then(() => {
            console.log("Manual marcado como concluído com sucesso.");
          })
          .catch((error) =>
            console.error("Erro ao marcar manual como concluído:", error)
          );

        const concluirButton = document.getElementById("concluir");
        if (concluirButton) {
          concluirButton.disabled = true;
          concluirButton.style.backgroundColor = "#b6b6b6";
          concluirButton.textContent = "Concluído";
        } else {
          console.error("Botão de conclusão não encontrado.");
        }
      }

      // Listagem de manuais ocorre ao clicar na aba 'TODOS'
      document
        .getElementById("tab-mobile-just-2")
        .addEventListener("click", function () {
          carregarListaManuais();
        });

      // Listagem de 'A Fazer' no momento de carregamento da página
      window.addEventListener("load", carregarManuaisDesignados);

      // Listagem de manuais ao clicar na aba 'A Fazer'
      document
        .getElementById("tab-mobile-just-0")
        .addEventListener("click", function () {
          carregarManuaisDesignados();
        });

      //Listagem de manuais ao clicar na aba 'Feito'
      document
        .getElementById("tab-mobile-just-1")
        .addEventListener("click", function () {
          carregarManuaisFeitos();
        });
    </script>
  </body>
</html>
